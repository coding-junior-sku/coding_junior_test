sever.port=8080
spring.datasource.url=jdbc:mysql://localhost:3306/summary_deeplearning
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#여기다가 mybatis설정을 하면 잘 안먹힌다. 이유는 잘모름.=>dao를 써서 자동매핑이 아니라 sqlsession을 쓰는구조로 만들었는데 그러면 sqlsessionfactory를 써야해서 그런것같다.
# demo application main java 에다가 mybatis config 설정파일을 따로 만든 것을 연결 시켜줘야한다

#mybatis config
#mybatis.config-location=classpath:mybatis-config.xml

##mybatis mapper
#mybatis.mapper-locations=mybatis/*-mapper.xml
##db snake java camel 서로 호환
#mybatis.configuration.map-underscore-to-camel-case=true
#alias 적용하기 위해서
#mybatis.type-aliases-package=com.sku.model

#view resolver 설정
#이유는 모르지만 src main webapp 밑에다가 만들어줘야한다.
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

#css 파일 위치 설정-정적 파일들
#스프링부트의 경우 정적 리소스를 반환하는 기본 경로가 몇개 있는데 그중 하나가 resources/static입니다.
#그래서 static폴더 하위 경로만 작성해도 정적 리소스인 css, js파일이 응답됩니다.

#webapp밑 css images js 파일들은 프로젝트를 빌드해서 톰캣이 인식하는 파일들이다
#webapp 밑에 파일들이 있고, resources static 밑에 파일들이 있어야지
#css image js가 적용이 된다
#실제로는 static pattern으로 인식한 파일들 위치가 여기에 있다
spring.web.resources.static-locations=classpath:/resources/static/**

#이 url매핑이 웹상에서 링크로 들어오면 실제로는 url이 아니고 static pattern으로 인식해라
spring.mvc.static-path-pattern=/resources/**
#한글깨짐 방지
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

#IntelliJ의 수정 사항을 웹에 바로 반영하도록 설정하는 방법!
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=false
spring.thymeleaf.cache=false